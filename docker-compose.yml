services:

  hospital-frontend:
    image: pandanxt/hospital-frontend:campaigns-1.0.0
    ports:
      - 6001:80
    container_name: nxt-hospital
    restart: always
    environment:
      HMS_BACKEND_URL: "http://localhost:5001"
      # CAMPAIGN_BACKEND_URL: "http://localhost:9001"
      DEFAULT_USER_ICON: "https://file-hospital.nxtwebmasters.com/images/default-user.webp"
      PATIENT_PORTAL_URL: "http://localhost:8001"
      BLOOD_GROUP: "A,B,AB,O"
      REPORT_OPTION: "Positive,Negative,Reactive,Non-Reactive,Matched,Not-Matched"
      ENABLE_AI_SUGGESTION: false
      DESIGN_IDENTIFIER: "nxtwebmaster"
    networks:
      - internal-net  

  patient-frontend:
    image: pandanxt/customer-portal:develop-1.0.0
    ports:
      - 8001:80
    container_name: portal-hospital
    restart: always
    environment:
      HMS_BACKEND_URL: "http://localhost:5001"
      DEFAULT_USER_ICON: "https://file-hospital.nxtwebmasters.com/images/default-user.webp"
      PORTAL_URL: "http://localhost:8001"
      PATIENT_DEFAULT_PASSWORD: "NxtHospital123"
      DESIGN_IDENTIFIER: "nxtwebmaster"
    networks:
      - internal-net  

  hospital-apis:
    image: pandanxt/hms-backend-apis:campaigns-1.0.0
    ports:
      - 5001:80
    container_name: api-hospital
    restart: always
    env_file:
      - ./hms-backend.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - /usr/share/nginx/html/images:/usr/share/nginx/html/images
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - internal-net 

  mysql:
    image: mysql:latest
    container_name: hospital-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "NxtWebMasters!@#123" 
      MYSQL_DATABASE: "nxt-hospital"
      MYSQL_USER: "nxt_user"
      MYSQL_PASSWORD: "NxtWebMasters464"
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "nxt_user", "-pNxtWebMasters464" ]
      interval: 10s
      timeout: 5s
      retries: 20
    volumes:
      - ./data/scripts:/docker-entrypoint-initdb.d
    networks:
      - internal-net 

  redis:
    image: redis:7.2
    container_name: hospital-redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal-net 

networks:
  internal-net:
    driver: bridge
